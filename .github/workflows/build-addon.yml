name: Addon
on:
  push:
    branches: [master, godot-3]
  workflow_dispatch:

env:
  GODOT_MAJOR: 4
  TARGET: template_release
  GODOT_REF: 4.0.3-stable
  LIBRARY_PATH: addons/godot-wasm/bin
  WASMER_VERSION: v3.1.1

jobs:
  build-addon:
    name: Build Addon
    strategy:
      matrix:
        platform: [linux, macos, windows]
        include:
          - platform: linux
            os: ubuntu-latest
          - platform: macos
            os: macos-11
          - platform: windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        uses: ./.github/actions/install-deps

      - name: Build Godot CPP
        uses: ./.github/actions/godot-cpp
        with:
          platform: ${{ matrix.platform }}
          target: ${{ env.TARGET }}

      - name: Build Addon
        uses: ./.github/actions/scons-build
        with:
          platform: ${{ matrix.platform }}
          target: ${{ env.TARGET }}
          godot-major: ${{ env.GODOT_MAJOR }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: ${{ github.workspace }}/${{ env.LIBRARY_PATH }}/${{ matrix.platform }}
          if-no-files-found: error

  # test-linux:
  #   needs: build-linux
  #   name: Test Linux
  #   runs-on: ubuntu-latest
  #   env:
  #     PLATFORM: linux
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Download Godot
  #       id: download-godot
  #       uses: ./.github/actions/download-godot
  #       with:
  #         version: ${{ env.GODOT_REF }}

  #     - name: Download Addon
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: ${{ env.PLATFORM }}
  #         path: ${{ github.workspace }}/${{ env.LIBRARY_PATH }}/${{ env.PLATFORM }}

  #     - name: Run Tests
  #       uses: ./.github/actions/run-tests
  #       with:
  #         executable: ${{ steps.download-godot.outputs.executable }}

  # build-osx:
  #   name: Build OSX
  #   runs-on: macos-11
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install Python Packages
  #       run: python -m pip install scons

  #     - name: Submodule Hash
  #       run: echo "SUBMODULE_HASH=$( git rev-parse HEAD:godot-cpp )" >> $GITHUB_ENV

  #     - name: Cache Godot Library
  #       id: cache-godot-cpp
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ${{ github.workspace }}/godot-cpp/bin
  #           ${{ github.workspace }}/godot-cpp/include
  #           ${{ github.workspace }}/godot-cpp/gen
  #         key: ${{ runner.os }}-${{ env.SUBMODULE_HASH }}-${{ secrets.GODOT_CPP_CACHE_VERSION }}

  #     - name: Compile Godot Library
  #       if: steps.cache-godot-cpp.outputs.cache-hit != 'true'
  #       run: |
  #         cd ${{ github.workspace }}/godot-cpp
  #         scons platform=macos target=template_release

  #     - name: Compile Addon
  #       run: scons platform=macos target=template_release

  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: macos
  #         path: ${{ github.workspace }}/${{ env.LIBRARY_PATH }}/macos
  #         if-no-files-found: error

  # build-windows:
  #   name: Build Windows
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install Python Packages
  #       run: python -m pip install scons pywin32

  #     - name: Submodule Hash
  #       run: echo "SUBMODULE_HASH=$( git rev-parse HEAD:godot-cpp )" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

  #     - name: Cache Godot Library
  #       id: cache-godot-cpp
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ${{ github.workspace }}/godot-cpp/bin
  #           ${{ github.workspace }}/godot-cpp/include
  #           ${{ github.workspace }}/godot-cpp/gen
  #         key: ${{ runner.os }}-${{ env.SUBMODULE_HASH }}-${{ secrets.GODOT_CPP_CACHE_VERSION }}

  #     - name: Compile Godot Library
  #       if: steps.cache-godot-cpp.outputs.cache-hit != 'true'
  #       run: |
  #         cd ${{ github.workspace }}\godot-cpp
  #         scons platform=windows target=template_release

  #     - name: MSVC Developer Command Prompt
  #       uses: ilammy/msvc-dev-cmd@v1

  #     - name: Compile Addon
  #       run: scons platform=windows target=template_release

  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: windows
  #         if-no-files-found: error
  #         path: |
  #           ${{ github.workspace }}\${{ env.LIBRARY_PATH }}\windows\
  #           !**\*.lib
  #           !**\*.exp
