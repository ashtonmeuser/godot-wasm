name: Download Godot
description: Download appropriate Godot executable
inputs:
  version:
    description: The Godot version to download
    required: true
outputs:
  executable:
    description: The downloaded Godot executable
    value: ${{ steps.set-output.outputs.executable }}
runs:
  using: composite
  steps:
    - name: Linux File Pattern
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo "ASSET=linux(\.x86_64|_headless\.64)" >> $GITHUB_ENV
        echo "FILE=linux(\.x86_64|_headless\.64)" >> $GITHUB_ENV

    - name: MacOS File Pattern
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "ASSET=(macos|osx)\.universal" >> $GITHUB_ENV
        echo "FILE=(macos|osx)\.universal" >> $GITHUB_ENV

    - name: Windows File Pattern
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "ASSET=win64.exe" >> $GITHUB_ENV
        echo "FILE=win64_console.exe" >> $GITHUB_ENV

    - name: Cache Godot
      id: cache-godot
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/Godot*.x86_64
          ${{ github.workspace }}/Godot.app
          ${{ github.workspace }}/Godot*_win64*.exe
          templates/*
        key: godot-${{ runner.os }}-${{ inputs.version }}

    - name: Download Godot
      if: steps.cache-godot.outputs.cache-hit != 'true'
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: godotengine/godot
        version: tags/${{ inputs.version }}
        regex: true
        target: './' # Defaults to regex prepended to filename
        file: ${{ inputs.version }}_(${{ env.ASSET }}|export_templates.tpz)

    - name: Extract Godot
      if: steps.cache-godot.outputs.cache-hit != 'true'
      shell: bash
      run: |
        zip_editor=$( ls | grep -E '${{ env.ASSET }}' )
        unzip "$zip_editor"
        zip_templates=$( ls | grep export_templates.tpz )
        unzip "$zip_templates"
        rm "$zip_editor" "$zip_templates"

    - name: Generic Executable
      shell: bash
      run: echo "EXECUTABLE=$( ls | grep -E '${{ env.FILE }}' )" >> $GITHUB_ENV

    - name: MacOS Executable
      if: runner.os == 'macOS'
      shell: bash
      run: echo "EXECUTABLE=Godot.app/Contents/MacOS/Godot" >> $GITHUB_ENV

    - name: Set Output
      id: set-output
      shell: bash
      run: echo "executable=${{ env.EXECUTABLE }}" >> $GITHUB_OUTPUT
