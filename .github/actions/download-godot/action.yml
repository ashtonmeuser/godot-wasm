name: Download Godot
description: Download appropriate Godot executable
inputs:
  version:
    description: The Godot version to download
    required: true
outputs:
  executable:
    description: The downloaded Godot executable
    value: ${{ steps.set-output.outputs.executable }}
runs:
  using: composite
  steps:
    - name: Linux File Pattern
      if: runner.os == 'Linux'
      shell: bash
      run: echo "FILE=linux(\.x86_64|_headless\.64)" >> $GITHUB_ENV

    - name: MacOS File Pattern
      if: runner.os == 'macOS'
      shell: bash
      run: echo "FILE=(macos|osx)\.universal" >> $GITHUB_ENV

    - name: Windows File Pattern
      if: runner.os == 'Windows'
      shell: bash
      run: echo "FILE=win64.exe" >> $GITHUB_ENV

    - name: Download Godot
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: godotengine/godot
        version: tags/${{ inputs.version }}
        regex: true
        target: './' # Defaults to regex prepended to filename
        file: ${{ env.FILE }}

    - name: Unzip Godot
      shell: bash
      run: |
        zip_file=$( ls | grep -E '${{ env.FILE }}' | grep -v '_mono_' )
        unzip "$zip_file"
        ls | grep -E '${{ env.FILE }}.*\.zip' | xargs rm
        echo "EXECUTABLE=$( ls | grep -E '${{ env.FILE }}' )" >> $GITHUB_ENV

    - name: MacOS Executable
      if: runner.os == 'macOS'
      shell: bash
      run: echo "EXECUTABLE=Godot.app/Contents/MacOS/Godot" >> $GITHUB_ENV

    - name: Set Output
      id: set-output
      shell: bash
      run: echo "executable=${{ env.EXECUTABLE }}" >> $GITHUB_OUTPUT

